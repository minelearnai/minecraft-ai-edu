services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    environment:
      - discovery.type=single-node
      - network.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:6.0
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: ./backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    ports:
      - '8000:8000'
    environment:
      - USE_LOCAL_LM=1
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URL=mongodb://mongo:27017
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongo:
        condition: service_healthy

  middleware:
    build: ./middleware
    command: python server.py
    volumes:
      - ./middleware:/app
    ports:
      - '3000:3000'
    environment:
      - BACKEND_URL=http://backend:8000
      - MONGODB_URL=mongodb://mongo:27017
    depends_on:
      - backend
      - mongo

  etl:
    build: ./knowledge
    command: python etl.py
    volumes:
      - ./knowledge:/app
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    profiles:
      - tools

volumes:
  mongo_data: