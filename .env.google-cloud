# Google Cloud Platform Configuration
# Copy this to .env and fill in your actual values

# === Vertex AI Configuration ===
# Required: Your Google Cloud Project ID
VERTEX_AI_PROJECT_ID=your-gcp-project-id-here

# Required: Google Cloud region for Vertex AI
VERTEX_AI_REGION=us-central1

# Optional: Vertex AI model name (default: gemini-1.5-flash)
VERTEX_AI_MODEL=gemini-1.5-flash

# Optional: Vertex AI embedding model (default: text-embedding-004)
VERTEX_AI_EMBEDDING_MODEL=text-embedding-004

# === Google Cloud Authentication ===
# Path to service account key file (for local development)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json

# Alternative: Use gcloud CLI authentication (recommended for local dev)
# Run: gcloud auth application-default login

# === AI Provider Configuration ===
# Set to 'vertex' to use Google Vertex AI instead of OpenAI
AI_DEFAULT_PROVIDER=vertex

# Fallback providers (comma-separated)
AI_FALLBACK_PROVIDERS=local,mock

# === Application Configuration ===
# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode
DEBUG=true

# Logging level
LOG_LEVEL=debug

# === Database Configuration ===
# MongoDB (use Cloud SQL or MongoDB Atlas for production)
MONGODB_URL=mongodb://localhost:27017/minecraft_ai_edu

# Redis (use Cloud Memorystore for production)
REDIS_URL=redis://localhost:6379/0

# Elasticsearch (use Elastic Cloud for production)
ELASTICSEARCH_URL=http://localhost:9200

# === Security Configuration ===
# Generate secure random keys for production
# You can use: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your-jwt-secret-key-minimum-32-characters-long
SESSION_SECRET=your-session-secret-key-minimum-32-characters-long

# === Google Cloud Services (Optional) ===
# Cloud Storage bucket for file uploads
# GCS_BUCKET_NAME=your-bucket-name

# Cloud Pub/Sub topics
# PUBSUB_CHAT_TOPIC=minecraft-ai-chat
# PUBSUB_ANALYTICS_TOPIC=minecraft-ai-analytics

# BigQuery dataset for analytics
# BIGQUERY_DATASET=minecraft_ai_analytics

# === Application Features ===
# Educational context enhancement
EDUCATIONAL_CONTEXT=true

# Minecraft-focused responses
MINECRAFT_FOCUSED=true

# Maximum tokens for AI responses
MAX_TOKENS=1000

# AI response temperature (0.0 to 1.0)
TEMPERATURE=0.7

# === Free Tier Limits (Adjust based on your usage) ===
# Rate limiting for free tier usage
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_REQUESTS_PER_HOUR=1000

# === Monitoring and Analytics ===
# Enable request logging
ENABLE_REQUEST_LOGGING=true

# Enable performance metrics
ENABLE_METRICS=true

# Google Cloud Logging (set to false for local development)
USE_CLOUD_LOGGING=false

# === Cost Optimization ===
# Enable caching to reduce AI API calls
ENABLE_CACHING=true

# Cache TTL in seconds (default: 1 hour)
CACHE_TTL=3600

# Maximum cache size (in MB)
MAX_CACHE_SIZE=100

# === Development Configuration ===
# Hot reload for development
RELOAD=true

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# API documentation
ENABLE_DOCS=true

# === Production Configuration (Override in production) ===
# These should be set via environment variables or secret management
# VERTEX_AI_PROJECT_ID=minecraft-ai-edu-prod
# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=info
# USE_CLOUD_LOGGING=true
# ENABLE_DOCS=false
# MONGODB_URL=mongodb://your-production-mongo-url
# REDIS_URL=redis://your-production-redis-url
# ELASTICSEARCH_URL=https://your-production-elasticsearch-url

# === Costs Monitoring ===
# Set budget alerts in Google Cloud Console
# Monitor Vertex AI usage: https://console.cloud.google.com/ai-platform/quotas
# Set up billing alerts: https://console.cloud.google.com/billing
